#!/bin/bash

set -e

#OS=$(python3 readies/bin/platform --os)
#ARCH=$(python3 readies/bin/platform --arch)

bash tensorflow/lite/tools/make/download_dependencies.sh

TMP_LIB=`pwd`/tmp
mkdir -p $TMP_LIB/include $TMP_LIB/lib
cp -r tensorflow/lite/tools/make/downloads/flatbuffers/include/flatbuffers $TMP_LIB/include/
TFLITE_DIR="tensorflow/lite"
declare -a tfLiteDirectories=(
    "$TFLITE_DIR"
    "$TFLITE_DIR/c"
    "$TFLITE_DIR/core"
    "$TFLITE_DIR/core/api"
    "$TFLITE_DIR/delegates/nnapi"
    "$TFLITE_DIR/delegates/xnnpack"
    "$TFLITE_DIR/experimental/resource"
    "$TFLITE_DIR/kernels"
    "$TFLITE_DIR/nnapi"
    "$TFLITE_DIR/schema"
    "$TFLITE_DIR/tools/evaluation"
)
for dir in "${tfLiteDirectories[@]}"
do
    mkdir -p $TMP_LIB/include/$dir
    cp $dir/*h $TMP_LIB/include/$dir
done

# gpu delegate
bazel build -c opt --copt -DMESA_EGL_NO_X11_HEADERS --copt -DEGL_NO_X11 tensorflow/lite/delegates/gpu:libtensorflowlite_gpu_delegate.so
cp bazel-bin/tensorflow/lite/delegates/gpu/libtensorflowlite_gpu_delegate.so $TMP_LIB/lib

# static
mkdir $TMP_LIB/tflite_build
cd $TMP_LIB/tflite_build
cmake ../../tensorflow/lite
cmake --build . -j
cp libtensorflow-lite.a $TMP_LIB/lib
